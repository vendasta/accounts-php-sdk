<?php 
# Code generated by sdkgen
# Generated on 2019-10-01 21:12:20.5838247 +0000 UTC using container gcr.io/repcore-prod/sdkgen:latest
# DO NOT EDIT!
namespace Vendasta\Accounts\V1\internal;

use Vendasta\Accounts\V1\Config;

class AccountsServiceGeneratedClient
{
    private $transport;
    
    /**
     * AccountsServiceGeneratedClient constructor.
     * @param string $env one of \Vendasta\Vax\Environment::<Env>
     * @param float $default_timeout
     */
    public function __construct(string $env, float $default_timeout = 10000)
    {
        $this->transport = $this->getTransportClient($env, $default_timeout);
    }

    /**
     * @param string $env one of \Vendasta\Vax\Environment::<Env>
     * @param float $default_timeout
     * @return AccountsServiceClientInterface
     */
    private function getTransportClient(string $env, float $default_timeout = 10000): AccountsServiceClientInterface
    {
        $config = $this->getEnvConfig($env);

        if (class_exists('Grpc\ChannelCredentials', true)) {
            return new AccountsServiceGRPCClient(
                $config['host'],
                $config['scope'],
                $config['secure'],
                $default_timeout
            );
        } else {
            return new AccountsServiceHTTPClient(
                $config['host'],
                $config['scope'],
                $config['secure'],
                $default_timeout
            );
        }
    }

    /**
     * @param string $env one of \Vendasta\Vax\Environment::<Env>
     * @return array
     */
    private function getEnvConfig(string $env): array {
        return Config::ENVIRONMENT_PARAMS[$env];
    }
    
    /**
     * @param \Accounts\V1\ActivateAddonRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Accounts\V1\ActivateAddonResponse proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function ActivateAddon(\Accounts\V1\ActivateAddonRequest $req, array $options = []): \Accounts\V1\ActivateAddonResponse
    {
        return $this->transport->ActivateAddon($req, $options);
    }
    
    /**
     * @param \Accounts\V1\DeactivateAddonRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Google\Protobuf\GPBEmpty proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function DeactivateAddon(\Accounts\V1\DeactivateAddonRequest $req, array $options = []): \Google\Protobuf\GPBEmpty
    {
        return $this->transport->DeactivateAddon($req, $options);
    }
    
    /**
     * @param \Accounts\V1\ActivateAppRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Accounts\V1\ActivateAppResponse proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function ActivateApp(\Accounts\V1\ActivateAppRequest $req, array $options = []): \Accounts\V1\ActivateAppResponse
    {
        return $this->transport->ActivateApp($req, $options);
    }
    
    /**
     * @param \Accounts\V1\DeactivateAppRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Google\Protobuf\GPBEmpty proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function DeactivateApp(\Accounts\V1\DeactivateAppRequest $req, array $options = []): \Google\Protobuf\GPBEmpty
    {
        return $this->transport->DeactivateApp($req, $options);
    }
    
    /**
     * @param \Accounts\V1\ChangeEditionRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Google\Protobuf\GPBEmpty proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function ChangeEdition(\Accounts\V1\ChangeEditionRequest $req, array $options = []): \Google\Protobuf\GPBEmpty
    {
        return $this->transport->ChangeEdition($req, $options);
    }
    
    /**
     * @param \Accounts\V1\UndoCancelRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Google\Protobuf\GPBEmpty proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function UndoCancel(\Accounts\V1\UndoCancelRequest $req, array $options = []): \Google\Protobuf\GPBEmpty
    {
        return $this->transport->UndoCancel($req, $options);
    }
    
    /**
     * @param \Accounts\V1\ListAddonActivationsRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Accounts\V1\ListAddonActivationsResponse proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function ListAddonActivations(\Accounts\V1\ListAddonActivationsRequest $req, array $options = []): \Accounts\V1\ListAddonActivationsResponse
    {
        return $this->transport->ListAddonActivations($req, $options);
    }
    
    /**
     * @param \Accounts\V1\CreateRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Accounts\V1\CreateResponse proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function Create(\Accounts\V1\CreateRequest $req, array $options = []): \Accounts\V1\CreateResponse
    {
        return $this->transport->Create($req, $options);
    }
    
    /**
     * @param \Accounts\V1\DeleteRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Google\Protobuf\GPBEmpty proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function Delete(\Accounts\V1\DeleteRequest $req, array $options = []): \Google\Protobuf\GPBEmpty
    {
        return $this->transport->Delete($req, $options);
    }
    
    /**
     * @param \Accounts\V1\GetRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Accounts\V1\GetResponse proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function Get(\Accounts\V1\GetRequest $req, array $options = []): \Accounts\V1\GetResponse
    {
        return $this->transport->Get($req, $options);
    }
    
    /**
     * @param \Accounts\V1\GetMultiRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Accounts\V1\GetMultiResponse proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function GetMulti(\Accounts\V1\GetMultiRequest $req, array $options = []): \Accounts\V1\GetMultiResponse
    {
        return $this->transport->GetMulti($req, $options);
    }
    
    /**
     * @param \Accounts\V1\ListRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Accounts\V1\ListResponse proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function List(\Accounts\V1\ListRequest $req, array $options = []): \Accounts\V1\ListResponse
    {
        return $this->transport->List($req, $options);
    }
    
    /**
     * @param \Accounts\V1\ListAccountDatesRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Accounts\V1\ListAccountDatesResponse proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function ListAccountDates(\Accounts\V1\ListAccountDatesRequest $req, array $options = []): \Accounts\V1\ListAccountDatesResponse
    {
        return $this->transport->ListAccountDates($req, $options);
    }
    
    /**
     * @param \Accounts\V1\UpdateExpiryRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Google\Protobuf\GPBEmpty proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function UpdateExpiry(\Accounts\V1\UpdateExpiryRequest $req, array $options = []): \Google\Protobuf\GPBEmpty
    {
        return $this->transport->UpdateExpiry($req, $options);
    }
    
    /**
     * @param \Accounts\V1\DismissPendingActivationRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Google\Protobuf\GPBEmpty proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function DismissPendingActivation(\Accounts\V1\DismissPendingActivationRequest $req, array $options = []): \Google\Protobuf\GPBEmpty
    {
        return $this->transport->DismissPendingActivation($req, $options);
    }
    
    /**
     * @param \Accounts\V1\ResolvePendingActivationRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Google\Protobuf\GPBEmpty proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function ResolvePendingActivation(\Accounts\V1\ResolvePendingActivationRequest $req, array $options = []): \Google\Protobuf\GPBEmpty
    {
        return $this->transport->ResolvePendingActivation($req, $options);
    }
    
    /**
     * @param \Accounts\V1\ListPendingActivationRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Accounts\V1\ListPendingActivationResponse proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function ListPendingActivations(\Accounts\V1\ListPendingActivationRequest $req, array $options = []): \Accounts\V1\ListPendingActivationResponse
    {
        return $this->transport->ListPendingActivations($req, $options);
    }
    
    /**
     * @param \Accounts\V1\ListPendingDeactivationsForPartnerRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Accounts\V1\ListPendingDeactivationResponse proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function ListPendingDeactivationsForPartner(\Accounts\V1\ListPendingDeactivationsForPartnerRequest $req, array $options = []): \Accounts\V1\ListPendingDeactivationResponse
    {
        return $this->transport->ListPendingDeactivationsForPartner($req, $options);
    }
    
    /**
     * @param \Accounts\V1\ListPendingDeactivationsForAppOrAddonRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Accounts\V1\ListPendingDeactivationResponse proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function ListPendingDeactivationsForAppOrAddon(\Accounts\V1\ListPendingDeactivationsForAppOrAddonRequest $req, array $options = []): \Accounts\V1\ListPendingDeactivationResponse
    {
        return $this->transport->ListPendingDeactivationsForAppOrAddon($req, $options);
    }
    
    /**
     * @param \Accounts\V1\ListPendingActivationsForBusinessRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Accounts\V1\ListPendingActivationResponse proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function ListPendingActivationsForBusiness(\Accounts\V1\ListPendingActivationsForBusinessRequest $req, array $options = []): \Accounts\V1\ListPendingActivationResponse
    {
        return $this->transport->ListPendingActivationsForBusiness($req, $options);
    }
    
    /**
     * @param \Accounts\V1\GetPendingActivationRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Accounts\V1\GetPendingActivationResponse proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function GetPendingActivation(\Accounts\V1\GetPendingActivationRequest $req, array $options = []): \Accounts\V1\GetPendingActivationResponse
    {
        return $this->transport->GetPendingActivation($req, $options);
    }
    
    /**
     * @param \Accounts\V1\ResolveBillingRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Google\Protobuf\GPBEmpty proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function ResolveBilling(\Accounts\V1\ResolveBillingRequest $req, array $options = []): \Google\Protobuf\GPBEmpty
    {
        return $this->transport->ResolveBilling($req, $options);
    }
    
    /**
     * @param \Accounts\V1\ListDeactivatedBusinessIDsForAppRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Accounts\V1\ListDeactivatedBusinessIDsForAppResponse proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function ListDeactivatedBusinessIDsForApp(\Accounts\V1\ListDeactivatedBusinessIDsForAppRequest $req, array $options = []): \Accounts\V1\ListDeactivatedBusinessIDsForAppResponse
    {
        return $this->transport->ListDeactivatedBusinessIDsForApp($req, $options);
    }
    
    /**
     * @param \Accounts\V1\ListActivationEventHistoryForBusinessRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Accounts\V1\ListActivationEventHistoryForBusinessResponse proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function ListActivationEventHistoryForBusiness(\Accounts\V1\ListActivationEventHistoryForBusinessRequest $req, array $options = []): \Accounts\V1\ListActivationEventHistoryForBusinessResponse
    {
        return $this->transport->ListActivationEventHistoryForBusiness($req, $options);
    }
    
    /**
     * @param \Accounts\V1\GetDeactivationReasonsForAppRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Accounts\V1\GetDeactivationReasonsForAppResponse proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function GetDeactivationReasonsForApp(\Accounts\V1\GetDeactivationReasonsForAppRequest $req, array $options = []): \Accounts\V1\GetDeactivationReasonsForAppResponse
    {
        return $this->transport->GetDeactivationReasonsForApp($req, $options);
    }
    
    /**
     * @param \Accounts\V1\ListCustomDeactivationReasonsForAppRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Accounts\V1\ListCustomDeactivationReasonsForAppResponse proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function ListCustomDeactivationReasonsForApp(\Accounts\V1\ListCustomDeactivationReasonsForAppRequest $req, array $options = []): \Accounts\V1\ListCustomDeactivationReasonsForAppResponse
    {
        return $this->transport->ListCustomDeactivationReasonsForApp($req, $options);
    }
    
    /**
     * @param \Accounts\V1\GetAppActivationStatusForBusinessRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Accounts\V1\GetAppActivationStatusForBusinessResponse proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function GetAppActivationStatusForBusiness(\Accounts\V1\GetAppActivationStatusForBusinessRequest $req, array $options = []): \Accounts\V1\GetAppActivationStatusForBusinessResponse
    {
        return $this->transport->GetAppActivationStatusForBusiness($req, $options);
    }
    
    /**
     * @param \Accounts\V1\CanActivateRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Accounts\V1\CanActivateResponse proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function CanActivate(\Accounts\V1\CanActivateRequest $req, array $options = []): \Accounts\V1\CanActivateResponse
    {
        return $this->transport->CanActivate($req, $options);
    }
    
    /**
     * @param \Accounts\V1\ListAppsAndAddonsActivationStatusesForBusinessRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Accounts\V1\ListAppsAndAddonsActivationsStatusesForBusinessResponse proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function ListAppsAndAddonsActivationStatusesForBusiness(\Accounts\V1\ListAppsAndAddonsActivationStatusesForBusinessRequest $req, array $options = []): \Accounts\V1\ListAppsAndAddonsActivationsStatusesForBusinessResponse
    {
        return $this->transport->ListAppsAndAddonsActivationStatusesForBusiness($req, $options);
    }
    
    /**
     * @param \Accounts\V1\SuspendActivationRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Google\Protobuf\GPBEmpty proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function SuspendActivation(\Accounts\V1\SuspendActivationRequest $req, array $options = []): \Google\Protobuf\GPBEmpty
    {
        return $this->transport->SuspendActivation($req, $options);
    }
    
    /**
     * @param \Accounts\V1\UnsuspendActivationRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Google\Protobuf\GPBEmpty proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function UnsuspendActivation(\Accounts\V1\UnsuspendActivationRequest $req, array $options = []): \Google\Protobuf\GPBEmpty
    {
        return $this->transport->UnsuspendActivation($req, $options);
    }
    
    /**
     * @param \Accounts\V1\HandleBusinessDeletedRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Google\Protobuf\GPBEmpty proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function HandleBusinessDeleted(\Accounts\V1\HandleBusinessDeletedRequest $req, array $options = []): \Google\Protobuf\GPBEmpty
    {
        return $this->transport->HandleBusinessDeleted($req, $options);
    }
    
    /**
     * @param \Accounts\V1\GetEstimatedBillableRevenueInPeriodRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Accounts\V1\GetEstimatedBillableRevenueInPeriodResponse proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function GetEstimatedBillableRevenueInPeriod(\Accounts\V1\GetEstimatedBillableRevenueInPeriodRequest $req, array $options = []): \Accounts\V1\GetEstimatedBillableRevenueInPeriodResponse
    {
        return $this->transport->GetEstimatedBillableRevenueInPeriod($req, $options);
    }
    
}
