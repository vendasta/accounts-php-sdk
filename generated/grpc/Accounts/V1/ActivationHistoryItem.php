<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: accounts/v1/activation_event.proto

namespace Accounts\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>accounts.v1.ActivationHistoryItem</code>
 */
class ActivationHistoryItem extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * event_type represents the type of event that occurred
     * </pre>
     *
     * <code>.accounts.v1.ActivationHistoryItem.ActivationEventType event_type = 1;</code>
     */
    private $event_type = 0;
    /**
     * <pre>
     * timestamp indicates when the event occurred
     * </pre>
     *
     * <code>.google.protobuf.Timestamp timestamp = 2;</code>
     */
    private $timestamp = null;
    /**
     * <pre>
     * blame information for the action the occurred.
     * </pre>
     *
     * <code>.accounts.v1.Blame blame = 3;</code>
     */
    private $blame = null;
    /**
     * <pre>
     * the id of an app or addon that represents the item the activation/deactivation was done on
     * </pre>
     *
     * <code>string item_id = 4;</code>
     */
    private $item_id = '';
    /**
     * <pre>
     * the submission id of an order form for the corresponding app or addon identified by the item_id
     * </pre>
     *
     * <code>string order_form_submission_id = 5;</code>
     */
    private $order_form_submission_id = '';
    /**
     * <pre>
     * if the item was a trial
     * </pre>
     *
     * <code>bool trial = 6;</code>
     */
    private $trial = false;

    public function __construct() {
        \GPBMetadata\Accounts\V1\ActivationEvent::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * event_type represents the type of event that occurred
     * </pre>
     *
     * <code>.accounts.v1.ActivationHistoryItem.ActivationEventType event_type = 1;</code>
     */
    public function getEventType()
    {
        return $this->event_type;
    }

    /**
     * <pre>
     * event_type represents the type of event that occurred
     * </pre>
     *
     * <code>.accounts.v1.ActivationHistoryItem.ActivationEventType event_type = 1;</code>
     */
    public function setEventType($var)
    {
        GPBUtil::checkEnum($var, \Accounts\V1\ActivationHistoryItem_ActivationEventType::class);
        $this->event_type = $var;
    }

    /**
     * <pre>
     * timestamp indicates when the event occurred
     * </pre>
     *
     * <code>.google.protobuf.Timestamp timestamp = 2;</code>
     */
    public function getTimestamp()
    {
        return $this->timestamp;
    }

    /**
     * <pre>
     * timestamp indicates when the event occurred
     * </pre>
     *
     * <code>.google.protobuf.Timestamp timestamp = 2;</code>
     */
    public function setTimestamp(&$var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->timestamp = $var;
    }

    /**
     * <pre>
     * blame information for the action the occurred.
     * </pre>
     *
     * <code>.accounts.v1.Blame blame = 3;</code>
     */
    public function getBlame()
    {
        return $this->blame;
    }

    /**
     * <pre>
     * blame information for the action the occurred.
     * </pre>
     *
     * <code>.accounts.v1.Blame blame = 3;</code>
     */
    public function setBlame(&$var)
    {
        GPBUtil::checkMessage($var, \Accounts\V1\Blame::class);
        $this->blame = $var;
    }

    /**
     * <pre>
     * the id of an app or addon that represents the item the activation/deactivation was done on
     * </pre>
     *
     * <code>string item_id = 4;</code>
     */
    public function getItemId()
    {
        return $this->item_id;
    }

    /**
     * <pre>
     * the id of an app or addon that represents the item the activation/deactivation was done on
     * </pre>
     *
     * <code>string item_id = 4;</code>
     */
    public function setItemId($var)
    {
        GPBUtil::checkString($var, True);
        $this->item_id = $var;
    }

    /**
     * <pre>
     * the submission id of an order form for the corresponding app or addon identified by the item_id
     * </pre>
     *
     * <code>string order_form_submission_id = 5;</code>
     */
    public function getOrderFormSubmissionId()
    {
        return $this->order_form_submission_id;
    }

    /**
     * <pre>
     * the submission id of an order form for the corresponding app or addon identified by the item_id
     * </pre>
     *
     * <code>string order_form_submission_id = 5;</code>
     */
    public function setOrderFormSubmissionId($var)
    {
        GPBUtil::checkString($var, True);
        $this->order_form_submission_id = $var;
    }

    /**
     * <pre>
     * if the item was a trial
     * </pre>
     *
     * <code>bool trial = 6;</code>
     */
    public function getTrial()
    {
        return $this->trial;
    }

    /**
     * <pre>
     * if the item was a trial
     * </pre>
     *
     * <code>bool trial = 6;</code>
     */
    public function setTrial($var)
    {
        GPBUtil::checkBool($var);
        $this->trial = $var;
    }

}

