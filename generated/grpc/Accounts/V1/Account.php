<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: accounts/v1/api.proto

namespace Accounts\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * Account is a representation of an activation in the Vendasta platform.
 * An activation exists in two states, an "active" state where it is available to
 * the purchaser, or a "deactivated" state where it's deactivated time is in the past.
 * Once an addon is deactivated, it is immutable moving forward.
 * </pre>
 *
 * Protobuf type <code>accounts.v1.Account</code>
 */
class Account extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * The unique identifier of the account in the application that corresponds to the business
     * </pre>
     *
     * <code>string account_id = 1;</code>
     */
    private $account_id = '';
    /**
     * <pre>
     * The business ID.
     * </pre>
     *
     * <code>string business_id = 2;</code>
     */
    private $business_id = '';
    /**
     * <pre>
     * The partner ID.
     * </pre>
     *
     * <code>string partner_id = 3;</code>
     */
    private $partner_id = '';
    /**
     * <pre>
     * The unique identifier for the application being created.
     * </pre>
     *
     * <code>string product_id = 4;</code>
     */
    private $product_id = '';
    /**
     * <pre>
     * The marketplace application ID.
     * </pre>
     *
     * <code>string app_id = 5;</code>
     */
    private $app_id = '';
    /**
     * <pre>
     * The custom entry url for the application.
     * </pre>
     *
     * <code>string custom_entry_url = 6;</code>
     */
    private $custom_entry_url = '';
    /**
     * <pre>
     * The email for the user who filled out the form.
     * </pre>
     *
     * <code>string user_contact_email = 7;</code>
     */
    private $user_contact_email = '';
    /**
     * <pre>
     * The activation time of the account.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp activation = 8;</code>
     */
    private $activation = null;
    /**
     * <pre>
     * The deactivation time for the account.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp deactivation = 9;</code>
     */
    private $deactivation = null;
    /**
     * <pre>
     * Whether or not the account is a trial account.
     * </pre>
     *
     * <code>bool trial = 10;</code>
     */
    private $trial = false;
    /**
     * <pre>
     * The order form submission id, unique per activation.
     * </pre>
     *
     * <code>string order_form_submission_id = 11;</code>
     */
    private $order_form_submission_id = '';
    /**
     * <pre>
     * Metadata and source for the activation event
     * </pre>
     *
     * <code>.accounts.v1.Blame activation_info = 12;</code>
     */
    private $activation_info = null;
    /**
     * <pre>
     * Metadata and source for the deactivation event
     * </pre>
     *
     * <code>.accounts.v1.Blame deactivation_info = 13;</code>
     */
    private $deactivation_info = null;
    /**
     * <pre>
     * The coming anniversary date for billing, also the date that users are going to have access until before cancelling the app
     * This date can be obtained by using the ListAccountDates endpoint
     * </pre>
     *
     * <code>.google.protobuf.Timestamp anniversary_date = 14 [deprecated = true];</code>
     */
    private $anniversary_date = null;
    /**
     * <pre>
     * The state of activation to determine if it's active or cancelled
     * </pre>
     *
     * <code>.accounts.v1.Account.AccountStatus status = 15;</code>
     */
    private $status = 0;
    /**
     * <pre>
     * The coming commitment date for billing, this is compute by the billing frenquency and the commitment setup by vendor
     * This date can be obtained by using the ListAccountDates endpoint
     * </pre>
     *
     * <code>.google.protobuf.Timestamp commitment_date = 16 [deprecated = true];</code>
     */
    private $commitment_date = null;
    /**
     * <pre>
     * Whether or not the account is suspended
     * </pre>
     *
     * <code>bool is_suspended = 17;</code>
     */
    private $is_suspended = false;
    /**
     * <pre>
     * The orderID in billing system associated with an AppActivation, which is generated by accounts microservice
     * </pre>
     *
     * <code>string billing_order_id = 18;</code>
     */
    private $billing_order_id = '';
    /**
     * <pre>
     * Activation descriptor is displayed in UI to differentiate multiple activations of the same app, ex. the domain for GoDaddy
     * </pre>
     *
     * <code>string activation_descriptor = 19;</code>
     */
    private $activation_descriptor = '';
    /**
     * <pre>
     * The activation identifier
     * </pre>
     *
     * <code>string activation_id = 20;</code>
     */
    private $activation_id = '';
    /**
     * <pre>
     * The edition id of the active edition of the app
     * </pre>
     *
     * <code>string edition_id = 21;</code>
     */
    private $edition_id = '';

    public function __construct() {
        \GPBMetadata\Accounts\V1\Api::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * The unique identifier of the account in the application that corresponds to the business
     * </pre>
     *
     * <code>string account_id = 1;</code>
     */
    public function getAccountId()
    {
        return $this->account_id;
    }

    /**
     * <pre>
     * The unique identifier of the account in the application that corresponds to the business
     * </pre>
     *
     * <code>string account_id = 1;</code>
     */
    public function setAccountId($var)
    {
        GPBUtil::checkString($var, True);
        $this->account_id = $var;
    }

    /**
     * <pre>
     * The business ID.
     * </pre>
     *
     * <code>string business_id = 2;</code>
     */
    public function getBusinessId()
    {
        return $this->business_id;
    }

    /**
     * <pre>
     * The business ID.
     * </pre>
     *
     * <code>string business_id = 2;</code>
     */
    public function setBusinessId($var)
    {
        GPBUtil::checkString($var, True);
        $this->business_id = $var;
    }

    /**
     * <pre>
     * The partner ID.
     * </pre>
     *
     * <code>string partner_id = 3;</code>
     */
    public function getPartnerId()
    {
        return $this->partner_id;
    }

    /**
     * <pre>
     * The partner ID.
     * </pre>
     *
     * <code>string partner_id = 3;</code>
     */
    public function setPartnerId($var)
    {
        GPBUtil::checkString($var, True);
        $this->partner_id = $var;
    }

    /**
     * <pre>
     * The unique identifier for the application being created.
     * </pre>
     *
     * <code>string product_id = 4;</code>
     */
    public function getProductId()
    {
        return $this->product_id;
    }

    /**
     * <pre>
     * The unique identifier for the application being created.
     * </pre>
     *
     * <code>string product_id = 4;</code>
     */
    public function setProductId($var)
    {
        GPBUtil::checkString($var, True);
        $this->product_id = $var;
    }

    /**
     * <pre>
     * The marketplace application ID.
     * </pre>
     *
     * <code>string app_id = 5;</code>
     */
    public function getAppId()
    {
        return $this->app_id;
    }

    /**
     * <pre>
     * The marketplace application ID.
     * </pre>
     *
     * <code>string app_id = 5;</code>
     */
    public function setAppId($var)
    {
        GPBUtil::checkString($var, True);
        $this->app_id = $var;
    }

    /**
     * <pre>
     * The custom entry url for the application.
     * </pre>
     *
     * <code>string custom_entry_url = 6;</code>
     */
    public function getCustomEntryUrl()
    {
        return $this->custom_entry_url;
    }

    /**
     * <pre>
     * The custom entry url for the application.
     * </pre>
     *
     * <code>string custom_entry_url = 6;</code>
     */
    public function setCustomEntryUrl($var)
    {
        GPBUtil::checkString($var, True);
        $this->custom_entry_url = $var;
    }

    /**
     * <pre>
     * The email for the user who filled out the form.
     * </pre>
     *
     * <code>string user_contact_email = 7;</code>
     */
    public function getUserContactEmail()
    {
        return $this->user_contact_email;
    }

    /**
     * <pre>
     * The email for the user who filled out the form.
     * </pre>
     *
     * <code>string user_contact_email = 7;</code>
     */
    public function setUserContactEmail($var)
    {
        GPBUtil::checkString($var, True);
        $this->user_contact_email = $var;
    }

    /**
     * <pre>
     * The activation time of the account.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp activation = 8;</code>
     */
    public function getActivation()
    {
        return $this->activation;
    }

    /**
     * <pre>
     * The activation time of the account.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp activation = 8;</code>
     */
    public function setActivation(&$var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->activation = $var;
    }

    /**
     * <pre>
     * The deactivation time for the account.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp deactivation = 9;</code>
     */
    public function getDeactivation()
    {
        return $this->deactivation;
    }

    /**
     * <pre>
     * The deactivation time for the account.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp deactivation = 9;</code>
     */
    public function setDeactivation(&$var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->deactivation = $var;
    }

    /**
     * <pre>
     * Whether or not the account is a trial account.
     * </pre>
     *
     * <code>bool trial = 10;</code>
     */
    public function getTrial()
    {
        return $this->trial;
    }

    /**
     * <pre>
     * Whether or not the account is a trial account.
     * </pre>
     *
     * <code>bool trial = 10;</code>
     */
    public function setTrial($var)
    {
        GPBUtil::checkBool($var);
        $this->trial = $var;
    }

    /**
     * <pre>
     * The order form submission id, unique per activation.
     * </pre>
     *
     * <code>string order_form_submission_id = 11;</code>
     */
    public function getOrderFormSubmissionId()
    {
        return $this->order_form_submission_id;
    }

    /**
     * <pre>
     * The order form submission id, unique per activation.
     * </pre>
     *
     * <code>string order_form_submission_id = 11;</code>
     */
    public function setOrderFormSubmissionId($var)
    {
        GPBUtil::checkString($var, True);
        $this->order_form_submission_id = $var;
    }

    /**
     * <pre>
     * Metadata and source for the activation event
     * </pre>
     *
     * <code>.accounts.v1.Blame activation_info = 12;</code>
     */
    public function getActivationInfo()
    {
        return $this->activation_info;
    }

    /**
     * <pre>
     * Metadata and source for the activation event
     * </pre>
     *
     * <code>.accounts.v1.Blame activation_info = 12;</code>
     */
    public function setActivationInfo(&$var)
    {
        GPBUtil::checkMessage($var, \Accounts\V1\Blame::class);
        $this->activation_info = $var;
    }

    /**
     * <pre>
     * Metadata and source for the deactivation event
     * </pre>
     *
     * <code>.accounts.v1.Blame deactivation_info = 13;</code>
     */
    public function getDeactivationInfo()
    {
        return $this->deactivation_info;
    }

    /**
     * <pre>
     * Metadata and source for the deactivation event
     * </pre>
     *
     * <code>.accounts.v1.Blame deactivation_info = 13;</code>
     */
    public function setDeactivationInfo(&$var)
    {
        GPBUtil::checkMessage($var, \Accounts\V1\Blame::class);
        $this->deactivation_info = $var;
    }

    /**
     * <pre>
     * The coming anniversary date for billing, also the date that users are going to have access until before cancelling the app
     * This date can be obtained by using the ListAccountDates endpoint
     * </pre>
     *
     * <code>.google.protobuf.Timestamp anniversary_date = 14 [deprecated = true];</code>
     */
    public function getAnniversaryDate()
    {
        return $this->anniversary_date;
    }

    /**
     * <pre>
     * The coming anniversary date for billing, also the date that users are going to have access until before cancelling the app
     * This date can be obtained by using the ListAccountDates endpoint
     * </pre>
     *
     * <code>.google.protobuf.Timestamp anniversary_date = 14 [deprecated = true];</code>
     */
    public function setAnniversaryDate(&$var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->anniversary_date = $var;
    }

    /**
     * <pre>
     * The state of activation to determine if it's active or cancelled
     * </pre>
     *
     * <code>.accounts.v1.Account.AccountStatus status = 15;</code>
     */
    public function getStatus()
    {
        return $this->status;
    }

    /**
     * <pre>
     * The state of activation to determine if it's active or cancelled
     * </pre>
     *
     * <code>.accounts.v1.Account.AccountStatus status = 15;</code>
     */
    public function setStatus($var)
    {
        GPBUtil::checkEnum($var, \Accounts\V1\Account_AccountStatus::class);
        $this->status = $var;
    }

    /**
     * <pre>
     * The coming commitment date for billing, this is compute by the billing frenquency and the commitment setup by vendor
     * This date can be obtained by using the ListAccountDates endpoint
     * </pre>
     *
     * <code>.google.protobuf.Timestamp commitment_date = 16 [deprecated = true];</code>
     */
    public function getCommitmentDate()
    {
        return $this->commitment_date;
    }

    /**
     * <pre>
     * The coming commitment date for billing, this is compute by the billing frenquency and the commitment setup by vendor
     * This date can be obtained by using the ListAccountDates endpoint
     * </pre>
     *
     * <code>.google.protobuf.Timestamp commitment_date = 16 [deprecated = true];</code>
     */
    public function setCommitmentDate(&$var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->commitment_date = $var;
    }

    /**
     * <pre>
     * Whether or not the account is suspended
     * </pre>
     *
     * <code>bool is_suspended = 17;</code>
     */
    public function getIsSuspended()
    {
        return $this->is_suspended;
    }

    /**
     * <pre>
     * Whether or not the account is suspended
     * </pre>
     *
     * <code>bool is_suspended = 17;</code>
     */
    public function setIsSuspended($var)
    {
        GPBUtil::checkBool($var);
        $this->is_suspended = $var;
    }

    /**
     * <pre>
     * The orderID in billing system associated with an AppActivation, which is generated by accounts microservice
     * </pre>
     *
     * <code>string billing_order_id = 18;</code>
     */
    public function getBillingOrderId()
    {
        return $this->billing_order_id;
    }

    /**
     * <pre>
     * The orderID in billing system associated with an AppActivation, which is generated by accounts microservice
     * </pre>
     *
     * <code>string billing_order_id = 18;</code>
     */
    public function setBillingOrderId($var)
    {
        GPBUtil::checkString($var, True);
        $this->billing_order_id = $var;
    }

    /**
     * <pre>
     * Activation descriptor is displayed in UI to differentiate multiple activations of the same app, ex. the domain for GoDaddy
     * </pre>
     *
     * <code>string activation_descriptor = 19;</code>
     */
    public function getActivationDescriptor()
    {
        return $this->activation_descriptor;
    }

    /**
     * <pre>
     * Activation descriptor is displayed in UI to differentiate multiple activations of the same app, ex. the domain for GoDaddy
     * </pre>
     *
     * <code>string activation_descriptor = 19;</code>
     */
    public function setActivationDescriptor($var)
    {
        GPBUtil::checkString($var, True);
        $this->activation_descriptor = $var;
    }

    /**
     * <pre>
     * The activation identifier
     * </pre>
     *
     * <code>string activation_id = 20;</code>
     */
    public function getActivationId()
    {
        return $this->activation_id;
    }

    /**
     * <pre>
     * The activation identifier
     * </pre>
     *
     * <code>string activation_id = 20;</code>
     */
    public function setActivationId($var)
    {
        GPBUtil::checkString($var, True);
        $this->activation_id = $var;
    }

    /**
     * <pre>
     * The edition id of the active edition of the app
     * </pre>
     *
     * <code>string edition_id = 21;</code>
     */
    public function getEditionId()
    {
        return $this->edition_id;
    }

    /**
     * <pre>
     * The edition id of the active edition of the app
     * </pre>
     *
     * <code>string edition_id = 21;</code>
     */
    public function setEditionId($var)
    {
        GPBUtil::checkString($var, True);
        $this->edition_id = $var;
    }

}

