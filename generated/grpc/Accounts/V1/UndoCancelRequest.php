<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: accounts/v1/api.proto

namespace Accounts\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>accounts.v1.UndoCancelRequest</code>
 */
class UndoCancelRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * Required: The application identifier for the app that the pending UndoCancel is for
     * </pre>
     *
     * <code>string app_id = 1;</code>
     */
    private $app_id = '';
    /**
     * <pre>
     * Required: The business we're Undo Cancel activation status for
     * </pre>
     *
     * <code>string business_id = 2;</code>
     */
    private $business_id = '';
    /**
     * <pre>
     * The activation ID that was given when the app/addon was activated. This is Required for an Addon call, but optional
     * for an App call
     * </pre>
     *
     * <code>string activation_id = 3;</code>
     */
    private $activation_id = '';
    /**
     * <pre>
     * Required: Metadata and source for the undo cancel. Since this will incur charges for the business again, we need
     * to track who is turning charges back on.
     * </pre>
     *
     * <code>.accounts.v1.Blame undo_info = 4;</code>
     */
    private $undo_info = null;

    public function __construct() {
        \GPBMetadata\Accounts\V1\Api::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * Required: The application identifier for the app that the pending UndoCancel is for
     * </pre>
     *
     * <code>string app_id = 1;</code>
     */
    public function getAppId()
    {
        return $this->app_id;
    }

    /**
     * <pre>
     * Required: The application identifier for the app that the pending UndoCancel is for
     * </pre>
     *
     * <code>string app_id = 1;</code>
     */
    public function setAppId($var)
    {
        GPBUtil::checkString($var, True);
        $this->app_id = $var;
    }

    /**
     * <pre>
     * Required: The business we're Undo Cancel activation status for
     * </pre>
     *
     * <code>string business_id = 2;</code>
     */
    public function getBusinessId()
    {
        return $this->business_id;
    }

    /**
     * <pre>
     * Required: The business we're Undo Cancel activation status for
     * </pre>
     *
     * <code>string business_id = 2;</code>
     */
    public function setBusinessId($var)
    {
        GPBUtil::checkString($var, True);
        $this->business_id = $var;
    }

    /**
     * <pre>
     * The activation ID that was given when the app/addon was activated. This is Required for an Addon call, but optional
     * for an App call
     * </pre>
     *
     * <code>string activation_id = 3;</code>
     */
    public function getActivationId()
    {
        return $this->activation_id;
    }

    /**
     * <pre>
     * The activation ID that was given when the app/addon was activated. This is Required for an Addon call, but optional
     * for an App call
     * </pre>
     *
     * <code>string activation_id = 3;</code>
     */
    public function setActivationId($var)
    {
        GPBUtil::checkString($var, True);
        $this->activation_id = $var;
    }

    /**
     * <pre>
     * Required: Metadata and source for the undo cancel. Since this will incur charges for the business again, we need
     * to track who is turning charges back on.
     * </pre>
     *
     * <code>.accounts.v1.Blame undo_info = 4;</code>
     */
    public function getUndoInfo()
    {
        return $this->undo_info;
    }

    /**
     * <pre>
     * Required: Metadata and source for the undo cancel. Since this will incur charges for the business again, we need
     * to track who is turning charges back on.
     * </pre>
     *
     * <code>.accounts.v1.Blame undo_info = 4;</code>
     */
    public function setUndoInfo(&$var)
    {
        GPBUtil::checkMessage($var, \Accounts\V1\Blame::class);
        $this->undo_info = $var;
    }

}

